package cn.retech.global_data_cache;

import org.apache.http.client.CookieStore;

import cn.retech.domainbean_model.login.LogonNetRespondBean;

/**
 * 需要全局缓存的数据
 * 
 */
public enum GlobalDataCacheForMemorySingleton {
	getInstance;

	// 是否是第一次启动App
	private boolean isFirstStartApp;

	public boolean isFirstStartApp() {
		return isFirstStartApp;
	}

	public void setFirstStartApp(boolean isFirstStartApp) {
		this.isFirstStartApp = isFirstStartApp;
	}

	// 是否需要在app启动时, 显示 "初学者指南界面"
	private boolean isNeedShowBeginnerGuide;

	public boolean isNeedShowBeginnerGuide() {
		return isNeedShowBeginnerGuide;
	}

	public void setNeedShowBeginnerGuide(boolean isNeedShowBeginnerGuide) {
		this.isNeedShowBeginnerGuide = isNeedShowBeginnerGuide;
	}

	// 是否需要自动登录的标志
	private boolean isNeedAutologin;

	public boolean isNeedAutologin() {
		return isNeedAutologin;
	}

	public void setNeedAutologin(boolean isNeedAutologin) {
		this.isNeedAutologin = isNeedAutologin;
	}

	private CookieStore cookieStore;

	public CookieStore getCookieStore() {
		return cookieStore;
	}

	public void setCookieStore(CookieStore cookieStore) {
		this.cookieStore = cookieStore;
	}

	// 私有用户登录成功后, 服务器返回的信息(判断此对象是否为空, 来确定当前是否有企业账户处于登录状态)
	private LogonNetRespondBean privateAccountLogonNetRespondBean;

	public LogonNetRespondBean getPrivateAccountLogonNetRespondBean() {
		return privateAccountLogonNetRespondBean;
	}

	public void setPrivateAccountLogonNetRespondBean(LogonNetRespondBean privateAccountLogonNetRespondBean) {
		this.privateAccountLogonNetRespondBean = privateAccountLogonNetRespondBean;
	}

	// 用户最后一次登录成功时的用户名/密码(企业账户/公共账户 登录成功都会保存在这里)
	private String usernameForLastSuccessfulLogon;

	public String getUsernameForLastSuccessfulLogon() {
		return usernameForLastSuccessfulLogon;
	}

	public void setUsernameForLastSuccessfulLogon(String usernameForLastSuccessfulLogon) {
		this.usernameForLastSuccessfulLogon = usernameForLastSuccessfulLogon;
	}

	private String passwordForLastSuccessfulLogon;

	public String getPasswordForLastSuccessfulLogon() {
		return passwordForLastSuccessfulLogon;
	}

	public void setPasswordForLastSuccessfulLogon(String passwordForLastSuccessfulLogon) {
		this.passwordForLastSuccessfulLogon = passwordForLastSuccessfulLogon;
	}

}
